
local system_simple = require("main.simple")
--local system_liquid = require("main.liquid")
local system = nil

--local socket = require("socket") -- for timing

local mode = 0
local num_particles = 500

local function init_particles(diagram, num_particles, width, height)
    if mode == 0 then
        system = system_simple
    --elseif mode == 1 then
    --    system = system_liquid
    end
    
    system.init_particles(diagram, num_particles, width, height)
    
    label.set_text("logo#num_particles", tostring(num_particles))
end

local function update_particles(self, dt)
    system.update_particles(dt)
end

local function get_points(particles)
    points = {}
    for i=1,#particles do
        local p = particles[i]
        table.insert(points, p.x)
        table.insert(points, p.y)
    end
    return points
end

local function draw_particles(particles)
    local color = vmath.vector4(1, 1, 1, 1)
    local offset = vmath.vector3(1, 1, 0)
    for k, p in pairs(particles) do
        msg.post("@render:", "draw_line", { start_point = p, end_point = p+offset, color = color } )
    end
end




function init(self)
    math.randomseed(0x123456)
    self.width = tonumber(sys.get_config("display.width", "800"))
    self.height = tonumber(sys.get_config("display.height", "600"))
    
    local logosize = 128
    local scale_width = self.width / logosize
    local scale_height = self.height / logosize
    go.set("#sprite", "scale", vmath.vector3(scale_width, scale_height, 1) )
    
    -- debug texture
    self.textureheader = {width=self.width,
                        height=self.height,
                        type=resource.TEXTURE_TYPE_2D,
                        format=resource.TEXTURE_FORMAT_RGB,
                        num_mip_maps=1 }
    
    self.diagram = voronoi.create(self.width, self.height)
    
    init_particles(self.diagram, num_particles, self.width, self.height)
    
    --msg.post("@system:", "toggle_profile")
end

function update(self, dt)
    local time_start = socket.gettime()
    
    particles = system.get_particles()
    update_particles(self, dt)
    
    local points = get_points(particles)
    voronoi.generate(self.diagram, points)
    
    time_end = socket.gettime()
    label.set_text("logo#time", string.format("%.3f ms", (time_end - time_start) * 1000.0) )
    
    local path = go.get("#sprite", "texture0")
    local image = voronoi.get_debug_image(self.diagram)
    resource.set_texture(path, self.textureheader, image)

    draw_particles(particles)
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
    -- Add input-handling code here
    -- Remove this function if not needed
end

function on_reload(self)
    voronoi.destroy(self.diagram)
    self.diagram = voronoi.create(self.width, self.height)

    label.set_text("logo#num_particles", tostring(num_particles))    
    init_particles(self.diagram, num_particles, self.width, self.height)
end


